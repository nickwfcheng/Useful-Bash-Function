##Bash - filtering liver files
gunzip simple_somatic_mutation.open.tsv.gz > simple_somatic_mutation.open.tsv
cut -f3,5,9,10,11,12,14,15,16,17,18,26  simple_somatic_mutation.open.tsv  > liver.txt

##R - Single matrix mutation type vs samples
#Importing file 
liver_sample = read.table(file = 'liver.txt', header = T, sep = '\t')

#Only keeping single base substitutions
liver_single = liver_sample[liver_sample$mutation_type == 'single base substitution',]

#Removing columns: project_code, mutation type, reference genome allele, quality score and consequence type
liver_single = liver_single[,-c(1,6,7,8,11,12)]

#Removing duplicated positions
library(data.table)
liver_single = unique(setDT(liver_single), by = c("icgc_sample_id" , "chromosome" , "chromosome_start", "chromosome_end"))

#Summarizing snv mutation to one column
liver_single$mutation = paste(liver_single$mutated_from_allele, liver_single$mutated_to_allele, sep=':')

#Removing non-mutations (eg A -> A, T -> T)
liver_single = liver_single[liver_single$mutation != 'A:A' & liver_single$mutation != 'T:T' & liver_single$mutation != 'C:C' & liver_single$mutation != 'G:G',]

#Converting mutation column to factor
liver_single$mutation = as.factor(liver_single$mutation)

#Counting overall number of each type of mutation
library(dplyr)
library(magrittr)
liver_single %>% 
  group_by(mutation) %>%
  summarise(no_rows = length(mutation)) -> liver_total

#Counting number of each type of mutation per sample
liver_single %>% 
  group_by(icgc_sample_id, mutation) %>%
  summarise(no_rows = length(mutation)) -> liver_count

#Normalising counts 
sample_count = aggregate(liver_count$no_rows, by=list(liver_count$icgc_sample_id), FUN=sum)
colnames(sample_count) = c('icgc_sample_id', 'sample_total_count')
liver_count = merge(liver_count, sample_count, by = 'icgc_sample_id', all = T)
liver_count$proportion = liver_count$no_rows/liver_count$sample_total_count

#Plotting heatmap/matrix of mutation type vs sample
library(ggplot2)
liver_count_plot = ggplot(liver_count, aes(x=mutation, y=icgc_sample_id)) + geom_tile(aes(fill = proportion)) + scale_fill_gradient2(mid = '#ffeda0' ,high = '#f03b20', midpoint = 0, limits = c(0,1)) + ylab('sample') + xlab('mutation') + scale_x_discrete(position = 'top') + theme(axis.ticks.y = element_blank(), axis.text.y=element_blank())

#Creating di-nucleotide matrix
source("https://bioconductor.org/biocLite.R")
biocLite("BSgenome")
biocLite("BSgenome.Hsapiens.UCSC.hg19")
library('BSgenome.Hsapiens.UCSC.hg19')

liver_double = liver_single
liver_double$'flank(left)' = as.vector(getSeq(Hsapiens, as.character(paste('chr',liver_double$chromosome, sep='')), start = liver_double$chromosome_start - 1, end = liver_double$chromosome_end - 1))
liver_double$'flank(right)' = as.vector(getSeq(Hsapiens, as.character(paste('chr',liver_double$chromosome, sep='')), start = liver_double$chromosome_start + 1, end = liver_double$chromosome_end + 1))

liver_double$mutated_from_allele = paste(liver_double$'flank(left)', liver_double$mutated_from_allele, sep='')
liver_double$mutated_to_allele = paste(liver_double$'flank(left)', liver_double$mutated_to_allele, sep='')

liver_double$mutation = paste(liver_double$mutated_from_allele, liver_double$mutated_to_allele, sep=':')

liver_double %>% 
  group_by(icgc_sample_id, mutation) %>%
  summarise(no_rows = length(mutation)) -> liver_count_di

sample_count_di = aggregate(liver_count_di$no_rows, by=list(liver_count_di$icgc_sample_id), FUN=sum)
colnames(sample_count_di) = c('icgc_sample_id', 'sample_total_count_di')
liver_count_di = merge(liver_count_di, sample_count_di, by = 'icgc_sample_id', all = T)
liver_count_di$proportion = liver_count_di$no_rows/liver_count_di$sample_total_count_di

liver_count_di_plot = ggplot(liver_count_di, aes(x=mutation, y=icgc_sample_id)) + geom_tile(aes(fill = proportion)) + scale_fill_gradient2(mid = '#ffeda0' ,high = '#f03b20', midpoint = 0, limits = c(0,0.5)) + ylab('sample') + xlab('mutation') + scale_x_discrete(position = 'top') + theme(axis.ticks.y = element_blank(), axis.text.y=element_blank(), axis.text.x = element_text(angle = 70, hjust = -0.1))

#Creating tri-nucleotide matrix
liver_triple = liver_double
liver_triple$mutated_from_allele = paste(liver_triple$mutated_from_allele,liver_triple$'flank(right)', sep='')
liver_triple$mutated_to_allele = paste(liver_triple$mutated_to_allele,liver_triple$'flank(right)', sep='')
liver_triple$mutation = paste(liver_triple$mutated_from_allele, liver_triple$mutated_to_allele, sep=':')

liver_triple %>% 
  group_by(icgc_sample_id, mutation) %>%
  summarise(no_rows = length(mutation)) -> liver_count_tri

sample_count_tri = aggregate(liver_count_tri$no_rows, by=list(liver_count_tri$icgc_sample_id), FUN=sum)
colnames(sample_count_tri) = c('icgc_sample_id', 'sample_total_count_tri')
liver_count_tri = merge(liver_count_tri, sample_count_tri, by = 'icgc_sample_id', all = T)
liver_count_tri$proportion = liver_count_tri$no_rows/liver_count_tri$sample_total_count_tri

liver_count_tri_plot = ggplot(liver_count_tri, aes(x=mutation, y=icgc_sample_id)) + geom_tile(aes(fill = proportion)) + scale_fill_gradient2(mid = '#ffeda0' ,high = '#f03b20', midpoint = 0, limits = c(0,0.1)) + ylab('sample') + xlab('mutation') + scale_x_discrete(position = 'top') + theme(axis.ticks.y = element_blank(), axis.text.y=element_blank(), axis.text.x = element_text(angle = 90, hjust = -0.1, size = 5))

#Checking if reference genome matches 
liver_single$ref_allele = as.vector(getSeq(Hsapiens, as.character(paste('chr',liver_single$chromosome, sep='')), start = liver_single$chromosome_start, end = liver_single$chromosome_end))
liver_single$check = ifelse(liver_single$mutated_from_allele == liver_single$ref_allele,  0,  1)

#Creating bin for every 1mil bases
liver_single$bin <- ceiling(liver_single$chromosome_start / 999999)

#pheatmap
